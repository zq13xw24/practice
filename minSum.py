'''
将数组分成两部分使得两部分的和的差最小
'''

'''
差最小就是说两部分的和最接近，而且和所有数的和SUM的一半也是最接近的。假设用sum1表示第一部分的和，sum2表示第二部分的和，
SUM表示所有数的和，那么sum1+sum2=SUM。假设sum1<sum2 那么SUM/2-sum1 = sum2-SUM/2; 
所以我们就有目标了，使得sum1<=SUM/2的条件下尽可能的大。也就是说从n个数中选出某些数，使得这些数的和尽可能的接近或者等于所有数的和的一般。
转化为简单的背包问题，背包的容量是sum/2，每个物体的体积就是数的大小，然后尽可能装满背包.

dp方程：f[i][V] = max(f[i-1][V], f[i-1][V-v[i]]+v[i])
f[i][V]表示用前i个物体装容量为V的背包能够装下的最大值，f[i-1][V]表示第i件物品不能被装入，f[i-1][V-v[i]]+v[i]表示第i个物品装入
'''
